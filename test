var input = {
  right: false,
  up: false,
  left: false,
  down: false,
  quit: false
};
var KEY = {
  D: 68,
  W: 87,
  A: 65,
  S:83,
  RIGHT:39,
  UP:38,
  LEFT:37,
  DOWN:40,
  Q:81
};
function press(evt) {
  var code = evt.keyCode;
    switch(code) {
      case KEY.RIGHT:
      case KEY.D: input.right = true; break;

      case KEY.UP:
      case KEY.W: input.up = true; break;

      case KEY.LEFT:
      case KEY.A: input.left = true; break;

      case KEY.DOWN:
      case KEY.S: input.down = true; break;

      case KEY.Q: input.quit = true; break;
    }
  }
function release(evt) {
  var code = evt.keyCode;
  switch(code) {
    case KEY.RIGHT:
    case KEY.D: input.right = false; break;
    case KEY.UP:
    case KEY.W: input.up = false; break;
    case KEY.LEFT:
    case KEY.A: input.left = false; break;
    case KEY.DOWN:
    case KEY.S: input.down = false; break;
    case KEY.Q: break;
  }
}
var level = [" ", "", "", "    x", "    xxxxx", "", "               l", "            xxxxxxxxxxx", "", "", "     xx", "", "", "            xx", "", "", "       xx", "", "", "     o","xxxxxxxxxxxxxxxxx"];
var canvas = document.getElementById('canvas');
var ctx = canvas.getContext('2d');
var player = function(x, y) { 
  this.x = x;
  this.y = y;
  this.acceleration = 0;
  this.jumping = true;
};
player.prototype.display = function() { 
  this.respawn=function(x1,y1){
    this.x = x1;
    this.y = y1;
  };
  ctx.fillStyle= 'rgb(20, 20, 20)';
  ctx.fillRect(this.x, this.y, 20, 20);
  if (this.y>canvas.height-20) {this.y=canvas.height-20;
    this.acceleration = 0;
    this.jumping = false; }
  if (input.up && !this.jumping) { this.acceleration = -5;
    this.jumping = true; }
  if (input.left) { this.x -= 3; }
  if (input.right) { this.x += 3; }
  this.acceleration+=0.17;
  this.y+=this.acceleration;
};
var player1=new player(0, 380);
var block=function(x,y,t) { 
  this.x=x;
  this.y=y;
  this.t=t;
};
var lava=function(x,y,t) { 
  this.x=x;
  this.y=y;
  this.t=t;
};
var levelNum=0;
var levelStartCoords={
  x:0,
  y:380,
};
lava.prototype.display = function() { 
  if(this.t===0){
    ctx.fillStyle='rgb(200, 20, 20)';
    ctx.fillRect(this.x, this.y, 20, 20);
  }
  if (player1.x > this.x + 10 && player1.x < this.x + 20 && player1.y + 19 > this.y && player1.y < this.y + 19) {
    player1.respawn(levelStartCoords.x,levelStartCoords.y); 
  }
  if(player1.x + 20 > this.x && player1.x + 20 < this.x + 10 && player1.y + 19 > this.y && player1.y < this.y + 19) { 
    player1.respawn(levelStartCoords.x,levelStartCoords.y); 
  }
  if(player1.y < this.y + 20 && player1.y > this.y + 10 && player1.x + 20 > this.x && player1.x < this.x + 20) { 
    player1.respawn(levelStartCoords.x,levelStartCoords.y); 
  }
  if(player1.y + 20 > this.y && player1.y + 20 < this.y + 10 && player1.x + 20 > this.x && player1.x < this.x + 20) { 
    player1.respawn(levelStartCoords.x,levelStartCoords.y); 
  }
};
block.prototype.display = function() { 
  if(this.t===0){
    ctx.fillStyle='rgb(70, 70, 70)';
    ctx.fillRect(this.x, this.y, 20, 20);
  }
  if(this.t===1){
    ctx.fillStyle='rgb(0, 170, 170)';
    ctx.fillRect(this.x, this.y, 20, 20);
  }
  if (player1.x > this.x + 10 && player1.x < this.x + 20 && player1.y + 19 > this.y && player1.y < this.y + 19) {
    player1.x = this.x + 20; 
  }
  if(player1.x + 20 > this.x && player1.x + 20 < this.x + 10 && player1.y + 19 > this.y && player1.y < this.y + 19) { 
    player1.x = this.x - 20; 
  }
  if(player1.y < this.y + 20 && player1.y > this.y + 10 && player1.x + 20 > this.x && player1.x < this.x + 20) { 
    player1.y = this.y + 20;
    player1.acceleration = 0; 
  }
  if(player1.y + 20 > this.y && player1.y + 20 < this.y + 10 && player1.x + 20 > this.x && player1.x < this.x + 20) { 
    player1.y = this.y - 20;
    player1.acceleration = 0;
    player1.jumping = false; 
  }
};
var blocks = [];
for (var y = 0;y < level.length; y++) {
  for (var x = 0;x < level[y].length; x++) {
    if (level[y][x]==="x") { 
      blocks.push(new block(x*20,y*20,0)); 
    }else if(level[y][x]==="o"){
      blocks.push(new block(x*20,y*20,1));
    }else if(level[y][x]==="l"){
      blocks.push(new lava(x*20,y*20,0));
    }
  }
}
draw = function() { 
  var canvas = document.getElementById('canvas');
  var ctx = canvas.getContext('2d');
  ctx.clearRect(0,0,canvas.width,canvas.height);
  player1.display();
  for (var i = 0;i < blocks.length; i++) {
    blocks[i].display();
  }
  window.requestAnimationFrame(draw);
};
window.requestAnimationFrame(draw);
